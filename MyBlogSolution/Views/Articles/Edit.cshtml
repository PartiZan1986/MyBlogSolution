@model MyBlog.Core.Models.Article
@{
    ViewData["Title"] = "Редактирование статьи";
    var allTags = ViewBag.AllTags as IEnumerable<MyBlog.Core.Models.Tag> ?? new List<MyBlog.Core.Models.Tag>();
}

<div class="row justify-content-center">
    <div class="col-md-10">
        <div class="card">
            <div class="card-header bg-warning text-white">
                <h4 class="mb-0"><i class="fas fa-edit"></i> Редактирование статьи</h4>
            </div>
            <div class="card-body">
                <form asp-action="Edit" method="post" id="articleForm">
                    <input type="hidden" asp-for="Id" />
                    <input type="hidden" asp-for="AuthorId" />
                    <input type="hidden" asp-for="CreatedAt" />

                    <div class="form-group">
                        <label asp-for="Title" class="font-weight-bold"></label>
                        <input asp-for="Title" class="form-control" placeholder="Введите заголовок статьи" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Summary" class="font-weight-bold"></label>
                        <textarea asp-for="Summary" class="form-control" rows="3"
                                  placeholder="Введите краткое описание статьи"></textarea>
                        <span asp-validation-for="Summary" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Content" class="font-weight-bold"></label>
                        <textarea asp-for="Content" class="form-control" rows="10"
                                  placeholder="Введите содержание статьи"></textarea>
                        <span asp-validation-for="Content" class="text-danger"></span>
                    </div>

                    <!-- Теги -->
                    <div class="form-group">
                        <label class="font-weight-bold">Теги:</label>
                        <div class="selected-tags mb-2">
                            <div id="selectedTags" class="d-flex flex-wrap gap-2">
                                @foreach (var tag in Model.Tags)
                                {
                                    <span class="badge badge-primary">
                                        #@tag.Name <i class="fas fa-times ml-1" style="cursor: pointer;"
                                                      onclick="removeTag('@tag.Name')"></i>
                                    </span>
                                }
                            </div>
                        </div>
                        <div class="input-group">
                            <input type="text" id="tagInput" class="form-control"
                                   placeholder="Введите тег и нажмите Enter или выберите из списка">
                            <div class="input-group-append">
                                <button type="button" id="addTag" class="btn btn-outline-secondary">
                                    <i class="fas fa-plus"></i> Добавить
                                </button>
                            </div>
                        </div>
                        <small class="form-text text-muted">
                            Введите тег и нажмите Enter, или выберите из существующих:
                        </small>

                        <!-- Список существующих тегов -->
                        <div class="existing-tags mt-2">
                            @foreach (var tag in allTags)
                            {
                                <span class="badge badge-secondary tag-option" data-tag="@tag.Name"
                                      style="cursor: pointer; margin: 2px;">
                                    #@tag.Name
                                </span>
                            }
                        </div>

                        <!-- Скрытое поле для хранения выбранных тегов -->
                        <input type="hidden" id="tags" name="tags" value="@string.Join(",", Model.Tags.Select(t => t.Name))" />
                    </div>

                    <!-- Информация о статье -->
                    <div class="card bg-light mb-3">
                        <div class="card-body">
                            <h6><i class="fas fa-info-circle"></i> Информация о статье</h6>
                            <div class="row">
                                <div class="col-md-6">
                                    <small class="text-muted">Автор:</small><br>
                                    <strong>@Model.Author?.FirstName @Model.Author?.LastName</strong>
                                </div>
                                <div class="col-md-3">
                                    <small class="text-muted">Создана:</small><br>
                                    <strong>@Model.CreatedAt.ToString("dd.MM.yyyy HH:mm")</strong>
                                </div>
                                <div class="col-md-3">
                                    <small class="text-muted">Комментарии:</small><br>
                                    <strong>@Model.Comments.Count</strong>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-warning btn-lg">
                            <i class="fas fa-save"></i> Сохранить изменения
                        </button>
                        <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-info">
                            <i class="fas fa-eye"></i> Просмотр
                        </a>
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left"></i> Назад к списку
                        </a>
                    </div>
                </form>

                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger mt-3">
                        <h5><i class="fas fa-exclamation-triangle"></i> Ошибки:</h5>
                        @Html.ValidationSummary()
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        let selectedTags = @Html.Raw(Json.Serialize(Model.Tags.Select(t => t.Name).ToList()));

        // Инициализация выбранных тегов
        function initializeSelectedTags() {
            updateSelectedTags();
            updateHiddenField();
        }

        // Добавление тега по кнопке
        document.getElementById('addTag').addEventListener('click', function() {
            addTagFromInput();
        });

        // Добавление тега по Enter
        document.getElementById('tagInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                addTagFromInput();
            }
        });

        // Выбор тега из существующих
        document.querySelectorAll('.tag-option').forEach(tag => {
            tag.addEventListener('click', function() {
                const tagName = this.getAttribute('data-tag');
                addTag(tagName);
            });
        });

        function addTagFromInput() {
            const input = document.getElementById('tagInput');
            const tagName = input.value.trim();

            if (tagName && !selectedTags.includes(tagName)) {
                addTag(tagName);
                input.value = '';
            }
        }

        function addTag(tagName) {
            if (!selectedTags.includes(tagName)) {
                selectedTags.push(tagName);
                updateSelectedTags();
                updateHiddenField();
            }
        }

        function removeTag(tagName) {
            selectedTags = selectedTags.filter(t => t !== tagName);
            updateSelectedTags();
            updateHiddenField();
        }

        function updateSelectedTags() {
            const container = document.getElementById('selectedTags');
            container.innerHTML = '';

            selectedTags.forEach(tag => {
                const badge = document.createElement('span');
                badge.className = 'badge badge-primary';
                badge.innerHTML = `#${tag} <i class="fas fa-times ml-1" style="cursor: pointer;"></i>`;
                badge.querySelector('i').addEventListener('click', () => removeTag(tag));
                container.appendChild(badge);
            });
        }

        function updateHiddenField() {
            document.getElementById('tags').value = selectedTags.join(',');
        }

        // Инициализация при загрузке
        document.addEventListener('DOMContentLoaded', function() {
            initializeSelectedTags();
        });

        // Валидация формы
        document.getElementById('articleForm').addEventListener('submit', function(e) {
            if (selectedTags.length === 0) {
                e.preventDefault();
                alert('Пожалуйста, добавьте хотя бы один тег');
                return;
            }
        });
    </script>

    <style>
        .tag-option:hover {
            background-color: #6c757d !important;
            color: white !important;
        }

        .selected-tags .badge {
            font-size: 0.9rem;
            padding: 0.5em 0.75em;
        }

        .existing-tags {
            max-height: 100px;
            overflow-y: auto;
        }
    </style>
}